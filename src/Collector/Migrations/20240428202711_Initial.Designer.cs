// <auto-generated />
using Collector.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Collector.Migrations
{
    [DbContext(typeof(CollectorContext))]
    [Migration("20240428202711_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Collector.Movies.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterCode")
                        .HasColumnType("integer(10)");

                    b.Property<int>("Code")
                        .HasColumnType("integer(10)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Episode")
                        .HasColumnType("integer(10)");

                    b.Property<string>("OpeningCrawl")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PlanetCode")
                        .HasColumnType("integer(10)");

                    b.Property<string>("Producer")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReleaseDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("StarshipCode")
                        .HasColumnType("integer(10)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("VehicleCode")
                        .HasColumnType("integer(10)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Movies", (string)null);
                });

            modelBuilder.Entity("Collector.Peoples.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BirthYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Code")
                        .HasColumnType("integer(10)");

                    b.Property<string>("EyeColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("HairColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("MovieCode")
                        .HasColumnType("integer(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PlanetCode")
                        .HasColumnType("integer(10)");

                    b.Property<string>("SkinColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("PlanetCode");

                    b.ToTable("Peoples", (string)null);
                });

            modelBuilder.Entity("Collector.Planets.Planet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterCode")
                        .HasColumnType("integer(10)");

                    b.Property<string>("Climate")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Code")
                        .HasColumnType("integer(10)");

                    b.Property<string>("Diameter")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gravity")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("MovieCode")
                        .HasColumnType("integer(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrbitalPeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Population")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RotationPeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SurfaceWater")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Terrain")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Planets", (string)null);
                });

            modelBuilder.Entity("Collector.Starships.Starship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CargoCapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Code")
                        .HasColumnType("integer(10)");

                    b.Property<string>("Consumables")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CostInCredits")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Crew")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("HyperdriveRating")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaxSpeed")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Mglt")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MovieCode")
                        .HasColumnType("integer(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Passengers")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Starships", (string)null);
                });

            modelBuilder.Entity("Collector.Vehicles.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CargoCapacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Code")
                        .HasColumnType("integer(10)");

                    b.Property<string>("Consumables")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CostInCredits")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Crew")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaxSpeed")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MovieCode")
                        .HasColumnType("integer(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Passengers")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Vehicles", (string)null);
                });

            modelBuilder.Entity("MoviePeople", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MoviesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharactersId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("MoviePeople");
                });

            modelBuilder.Entity("MoviePlanet", b =>
                {
                    b.Property<int>("MoviesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlanetsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MoviesId", "PlanetsId");

                    b.HasIndex("PlanetsId");

                    b.ToTable("MoviePlanet");
                });

            modelBuilder.Entity("MovieStarship", b =>
                {
                    b.Property<int>("MoviesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StarshipsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MoviesId", "StarshipsId");

                    b.HasIndex("StarshipsId");

                    b.ToTable("MovieStarship");
                });

            modelBuilder.Entity("MovieVehicle", b =>
                {
                    b.Property<int>("MoviesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehiclesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MoviesId", "VehiclesId");

                    b.HasIndex("VehiclesId");

                    b.ToTable("MovieVehicle");
                });

            modelBuilder.Entity("Collector.Peoples.People", b =>
                {
                    b.HasOne("Collector.Planets.Planet", "Planet")
                        .WithMany("Characters")
                        .HasForeignKey("PlanetCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planet");
                });

            modelBuilder.Entity("MoviePeople", b =>
                {
                    b.HasOne("Collector.Peoples.People", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Collector.Movies.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MoviePlanet", b =>
                {
                    b.HasOne("Collector.Movies.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Collector.Planets.Planet", null)
                        .WithMany()
                        .HasForeignKey("PlanetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieStarship", b =>
                {
                    b.HasOne("Collector.Movies.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Collector.Starships.Starship", null)
                        .WithMany()
                        .HasForeignKey("StarshipsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieVehicle", b =>
                {
                    b.HasOne("Collector.Movies.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Collector.Vehicles.Vehicle", null)
                        .WithMany()
                        .HasForeignKey("VehiclesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Collector.Planets.Planet", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
